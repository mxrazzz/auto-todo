# This workflow automatically creates a GitHub Release when you push a version tag
# Example: git tag -a v1.0.0 -m "First release" && git push origin v1.0.0

name: Release Package

# Trigger: runs when you push a tag that starts with 'v' (like v1.0.0, v2.1.3, etc.)
on:
  push:
    tags:
      - "v*"

# Permissions: this workflow needs to create releases and upload files
permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Download your code from GitHub
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Install Python 3.11 (match your local version)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # Step 3: Install all dependencies (pytest, black, flake8, etc.)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run tests to make sure everything works before releasing
      # If tests fail, the release is cancelled automatically
      - name: Run tests
        run: |
          python -m pytest --cov=main --cov-report=term-missing

      # Step 5: Create a clean .zip file of your app
      - name: Package application
        run: |
          # Create a distribution folder
          mkdir -p dist

          # Zip everything except git files, cache files, and workflow files
          zip -r dist/auto-todo-${{ github.ref_name }}.zip . \
            -x ".git/*" \
            -x ".github/*" \
            -x "*.pyc" \
            -x "__pycache__/*" \
            -x ".pytest_cache/*" \
            -x "*.egg-info/*" \
            -x ".coverage" \
            -x "coverage.xml" \
            -x "coverage-badge.svg"

      # Step 6: Create the GitHub Release and upload the .zip file
      # This modern action does everything in one step!
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          # Upload all .zip files from the dist folder
          files: dist/*.zip

          # Auto-generate release notes from commits since last tag
          generate_release_notes: true

          # Add custom description
          body: |
            ## ðŸŽ‰ auto-todo ${{ github.ref_name }}

            A simple command-line to-do list application.

            ### ðŸ“¦ Installation
            1. Download `auto-todo-${{ github.ref_name }}.zip` below
            2. Extract the zip file
            3. Open a terminal in the extracted folder
            4. Run: `pip install -r requirements.txt`
            5. Run: `python main.py`

            ### âœ¨ Features
            - Add tasks
            - View tasks
            - Remove tasks

            ### ðŸ§ª Tested
            All tests passed before this release was created.
